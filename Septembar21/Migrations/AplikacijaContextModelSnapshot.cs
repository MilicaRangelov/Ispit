// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Septembar21.Migrations
{
    [DbContext(typeof(AplikacijaContext))]
    partial class AplikacijaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Drzava", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("Models.Mesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("DrzavaID");

                    b.ToTable("Mesto");
                });

            modelBuilder.Entity("Models.Rezervacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatumDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOd")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("Models.SmestajniObjekat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("MestoID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("MestoID");

                    b.ToTable("SmestajniObjekat");
                });

            modelBuilder.Entity("Models.Soba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrSobe")
                        .HasColumnType("int");

                    b.Property<int?>("SmestajniObjekatID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SmestajniObjekatID");

                    b.ToTable("Soba");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("RezervacijaID")
                        .HasColumnType("int");

                    b.Property<int?>("SobaID")
                        .HasColumnType("int");

                    b.Property<bool>("Zauzeto")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("RezervacijaID");

                    b.HasIndex("SobaID");

                    b.ToTable("RezervacijaSoba");
                });

            modelBuilder.Entity("Models.Mesto", b =>
                {
                    b.HasOne("Models.Drzava", "Drzava")
                        .WithMany("Mesta")
                        .HasForeignKey("DrzavaID");

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("Models.SmestajniObjekat", b =>
                {
                    b.HasOne("Models.Mesto", "Mesto")
                        .WithMany("SmestajniObjekti")
                        .HasForeignKey("MestoID");

                    b.Navigation("Mesto");
                });

            modelBuilder.Entity("Models.Soba", b =>
                {
                    b.HasOne("Models.SmestajniObjekat", "SmestajniObjekat")
                        .WithMany("Sobe")
                        .HasForeignKey("SmestajniObjekatID");

                    b.Navigation("SmestajniObjekat");
                });

            modelBuilder.Entity("Models.Spoj", b =>
                {
                    b.HasOne("Models.Rezervacija", "Rezervacija")
                        .WithMany("RezvervacijaSoba")
                        .HasForeignKey("RezervacijaID");

                    b.HasOne("Models.Soba", "Soba")
                        .WithMany("SobaRezervacija")
                        .HasForeignKey("SobaID");

                    b.Navigation("Rezervacija");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("Models.Drzava", b =>
                {
                    b.Navigation("Mesta");
                });

            modelBuilder.Entity("Models.Mesto", b =>
                {
                    b.Navigation("SmestajniObjekti");
                });

            modelBuilder.Entity("Models.Rezervacija", b =>
                {
                    b.Navigation("RezvervacijaSoba");
                });

            modelBuilder.Entity("Models.SmestajniObjekat", b =>
                {
                    b.Navigation("Sobe");
                });

            modelBuilder.Entity("Models.Soba", b =>
                {
                    b.Navigation("SobaRezervacija");
                });
#pragma warning restore 612, 618
        }
    }
}
